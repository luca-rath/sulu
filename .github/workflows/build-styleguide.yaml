name: Build styleguide

on:
    push:
        branches:
            - master
    release:
        types:
            - released

jobs:
    build-styleguide:
        name: Build styleguide
        runs-on: ubuntu-latest
        steps:
            - name: Get the version
              id: get_version
              run: |
                  if [ $TAG_NAME ]; then echo ::set-output name=VERSION::$(echo $TAG_NAME | cut -d . -f -2); else echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3); fi
              env:
                  TAG_NAME: ${{ github.event.release.tag_name }}

            - name: Checkout project
              uses: actions/checkout@v1

            - name: Get latest release
              id: latest_release
              uses: pozetroninc/github-action-get-latest-release@v0.4.0
              with:
                  owner: sulu
                  repo: sulu

            - name: Get latest tag
              id: latest_tag
              run: echo ::set-output name=TAG::$(echo ${{ steps.latest_release.outputs.release }} | cut -d . -f -2)

            - name: Print latest tag
              run: echo ${{ steps.latest_tag.outputs.TAG }}

            - name: Change styleguide config
              run: |
                  sed -i 's/VERSION/${{ steps.get_version.outputs.VERSION }}/g' styleguide.build.config.js

            - name: Use Node.js 12
              uses: actions/setup-node@v1
              with:
                  node-version: 12.x

            - name: Install dependencies
              run: npm install

            - name: Clone SuluJsReference repository
              run: git clone git@github.com:luca-rath/sulu-js-reference.git styleguide

            - name: Build styleguide
              run: npm run styleguide:build -- --config styleguide.build.config.js

            - name: List styleguides
              id: list_styleguides
              run: echo ::set-output name=DIRS::$(python -c 'import os, json; print json.dumps([f for f in os.listdir("styleguide/") if not f.startswith(".") and os.path.isdir(os.path.join("styleguide/", f))])')

            - name: Print dirs
              run: echo ${{ steps.list_styleguides.outputs.DIRS }}


